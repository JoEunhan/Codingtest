#include <iostream>
#include <algorithm>
using namespace std;


int N;

int main() {

    cin >> N;
    int arr[1000][3];
    for (int i = 1; i <= N; i++) {
        for (int j = 0; j < 3; j++) {
            cin >> arr[i][j];
        }
    }
    int ans = 0;
    bool tag[3];
    fill_n(tag, 3, 0);
    /*
    for (int i = 0; i < size(tag); i++) {
        cout << tag[i] << '\n';

    }*/
   
    int dp[1000][3];
    dp[1][0] = arr[1][0];
    dp[1][1] = arr[1][1];
    dp[1][2] = arr[1][2];
    dp[2][0] = min(dp[1][1], dp[1][2]) + arr[2][0];
    dp[2][1] = min(dp[1][0], dp[1][2]) + arr[2][1];
    dp[2][2] = min(dp[1][0], dp[1][1]) + arr[2][2];

    if(N>=3)
        for (int i = 3; i <= N; i++) {
            dp[i][0] = min(dp[i - 1][1], dp[i - 1][2]) + arr[i][0];
            dp[i][1] = min(dp[i - 1][0], dp[i - 1][2]) + arr[i][1];
            dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]) + arr[i][2];

        }

    int min = 1000000;
    for (int i = 0; i < 3; i++) {
        if (min > dp[N][i])min = dp[N][i];
    }

    cout << min;

  
    return 0;

}
